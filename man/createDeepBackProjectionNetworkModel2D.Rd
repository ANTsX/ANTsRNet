% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createDeepBackProjectionNetworkModel.R
\name{createDeepBackProjectionNetworkModel2D}
\alias{createDeepBackProjectionNetworkModel2D}
\title{2-D implementation of the deep back-projection network.}
\usage{
createDeepBackProjectionNetworkModel2D(
  inputImageSize,
  numberOfOutputs = 1,
  numberOfBaseFilters = 64,
  numberOfFeatureFilters = 256,
  numberOfBackProjectionStages = 7,
  convolutionKernelSize = c(12, 12),
  strides = c(8, 8),
  lastConvolution = c(3, 3),
  numberOfLossFunctions = 1
)
}
\arguments{
\item{inputImageSize}{Used for specifying the input tensor shape.  The
shape (or dimension) of that tensor is the image dimensions followed by
the number of channels (e.g., red, green, and blue).}

\item{numberOfOutputs}{number of outputs (e.g., 3 for RGB images).}

\item{numberOfBaseFilters}{number of base filters.}

\item{numberOfFeatureFilters}{number of feature filters.}

\item{numberOfBackProjectionStages}{number of up-/down-projection stages.  This
number includes the final up block.}

\item{convolutionKernelSize}{kernel size for certain convolutional layers.  This
and \code{strides} are dependent on the scale factor discussed in
original paper.  Factors used in the original implementation are as follows:
2x --> \code{convolutionKernelSize = c( 6, 6 )},
4x --> \code{convolutionKernelSize = c( 8, 8 )},
8x --> \code{convolutionKernelSize = c( 12, 12 )}.  We default to 8x parameters.}

\item{strides}{strides for certain convolutional layers.  This and the
\code{convolutionKernelSize} are dependent on the scale factor discussed in
original paper.  Factors used in the original implementation are as follows:
2x --> \code{strides = c( 2, 2 )}, 4x --> \code{strides = c( 4, 4 )}, 8x -->
\code{strides = c( 8, 8 )}. We default to 8x parameters.}

\item{lastConvolution}{the kernel size for the last convolutional layer}

\item{numberOfLossFunctions}{the number of data targets, e.g. 2 for 2 targets}
}
\value{
a keras model defining the deep back-projection network.
}
\description{
Creates a keras model of the deep back-project network for image super
resolution.  More information is provided at the authors' website:
}
\details{
\preformatted{    \url{https://www.toyota-ti.ac.jp/Lab/Denshi/iim/members/muhammad.haris/projects/DBPN.html}
}

with the paper available here:\preformatted{    \url{https://arxiv.org/abs/1803.02735}
}

This particular implementation was influenced by the following keras (python)
implementation:\preformatted{    \url{https://github.com/rajatkb/DBPN-Keras}
}

with help from the original author's Caffe and Pytorch implementations:\preformatted{    \url{https://github.com/alterzero/DBPN-caffe}
    \url{https://github.com/alterzero/DBPN-Pytorch}
}
}
\examples{
model = createDeepBackProjectionNetworkModel2D(c(25, 25, 1))
rm(model); gc()
}
\author{
Tustison NJ
}
