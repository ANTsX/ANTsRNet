% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/randomImageTransformBatchGenerator.R
\name{randomImageTransformParametersBatchGenerator}
\alias{randomImageTransformParametersBatchGenerator}
\title{Random image transform parameters batch generator}
\description{
This R6 class can be used to generate parameters to affine and other
transformations applied to an input image population.
The class calls \code{\link{randomImageTransformParametersAugmentation}}.
}
\section{Usage}{

\preformatted{
bgen = randomImageTransformParametersBatchGenerator$new( ... )

bgen$generate( batchSize = 32L )

}
}

\section{Arguments}{

\code{imageDomain} defines the spatial domain for all images.
\code{imageList} List contains k images.

\code{transformType} random transform type to generate;
one of the following options
\code{c("Translation","Rigid","ScaleShear","Affine","DeformationBasis" ) }

NOTE: if the input images do not match the spatial domain of the domain
image, we internally resample the target to the domain.  This may have
unexpected consequences if you are not aware of this.
This operation will test
\code{antsImagePhysicalSpaceConsistency} then call
\code{resampleImageToTarget} upon failure.

\code{spatialSmoothing} spatial smoothing for simulated deformation

\code{numberOfCompositions} number of compositions

\code{deformationBasis} list of basis deformations
\code{txParamMeans} vector of basis deformations means
\code{txParamSDs} vector of basis deformations sds
\code{center} center the parameters before passing to Y
}

\section{Methods}{

\code{$new()} Initialize the class in default empty or filled form.

\code{$generate} generate the batch of samples with given batch size
}

\examples{

library( ANTsR )
i1 = antsImageRead( getANTsRData( "r16" ) )
i2 = antsImageRead( getANTsRData( "r64" ) )
s1 = thresholdImage( i1, "Otsu", 3 )
s2 = thresholdImage( i2, "Otsu", 3 )
# see ANTsRNet randomImageTransformAugmentation
predictors = list( i1, i2, i2, i1 )
trainingData <- randomImageTransformParametersBatchGenerator$new(
  imageList = predictors,
  transformType = "Affine",
  imageDomain = i1, txParamMeans=c(1,0,0,1,0,0), txParamSDs=diag(6)*0.01
  )
testBatchGenFunction = trainingData$generate( 2 )
myout = testBatchGenFunction( )

}
\seealso{
\code{\link{randomImageTransformParametersAugmentation}}
}
