% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/applyDBPN4x.R
\name{applySuperResolutionModel}
\alias{applySuperResolutionModel}
\title{applySuperResolutionModel}
\usage{
applySuperResolutionModel(image, model, expansionFactor = 4,
  strideLength = 20, lowResolutionPatchSize = c(48, 48),
  additiveOffset, standardDeviationOffset, verbose = FALSE)
}
\arguments{
\item{image}{input image}

\item{model}{model object or filename see \code{getPretrainedNetwork}}

\item{expansionFactor}{size to upscale, should match network pretraining}

\item{strideLength}{stride length should be less than patch size}

\item{lowResolutionPatchSize}{patch size at low resolution that will be
expanded by expansionFactor - needs to be consistent with trained model.}

\item{additiveOffset}{a single number to add to the patch intensity.  if this is missing, then it is not applied.  instead, the mean will be subtracted from the patch.}

\item{standardDeviationOffset}{an offset added to the normalization of patches
to prevent divisions by zero.  if this is missing, then it is not applied.}

\item{verbose}{If \code{TRUE}, show status messages}
}
\value{
image upscaled to resolution provided by network
}
\description{
Apply pretrained super-resolution network
}
\details{
This function makes several assumptions about how the network was trained.
It assumes input data was scaled to the range of 0 to 255.  Optionally,
additional patch-wise mean subtraction and normalization by standard deviation
is applied.  Otherwie, a single additive constant may be subtracted from each
patch.  See the code if questions arise.
}
\examples{
\dontrun{
simg <- applySuperResolutionModel( ri( 1 ), getPretrainedNetwork( "dbpn4x" ) )
}
}
\author{
Avants BB
}
