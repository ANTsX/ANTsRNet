% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/randomImageTransformAugmentation.R
\name{randomImageTransformParametersAugmentation}
\alias{randomImageTransformParametersAugmentation}
\title{Generate transform parameters and transformed images}
\usage{
randomImageTransformParametersAugmentation(
  imageDomain,
  predictorImageList,
  n = 8,
  typeOfTransform = "Affine",
  interpolator = "linear",
  spatialSmoothing = 3,
  numberOfCompositions = 4,
  deformationBasis,
  txParamMeans,
  txParamSDs,
  center = FALSE
)
}
\arguments{
\item{imageDomain}{defines the spatial domain for all images.  NOTE: if the
input images do not match the spatial domain of the domain image, we
internally resample the target to the domain.  This may have unexpected
consequences if you are not aware of this.  This operation will test
\code{antsImagePhysicalSpaceConsistency} then call
\code{resampleImageToTarget} upon failure.}

\item{predictorImageList}{list of lists of image predictors}

\item{n}{number of simulations to run}

\item{typeOfTransform}{one of the following options
\code{c("Translation","Rigid","ScaleShear","Affine", "DeformationBasis")}}

\item{interpolator}{nearestNeighbor or linear (string) for predictor images}

\item{spatialSmoothing}{spatial smoothing for simulated deformation}

\item{numberOfCompositions}{integer greater than or equal to one}

\item{deformationBasis}{list containing deformationBasis set or a matrix
if the basis is low-dimensional i.e. affine}

\item{txParamMeans}{list containing deformationBasis set means}

\item{txParamSDs}{list containing deformationBasis standard deviations}

\item{center}{center the parameters before passing as ground truth output}
}
\value{
list of transformed images and transform parameters
}
\description{
The function will apply rigid, affine or deformable maps to an input set of
training images.  The reference image domain defines the space in which this
happens.  The outcome here is the transform parameters themselves.  This
is intended for use with low-dimensional transformations.
}
\examples{

library( ANTsR )
i1 = antsImageRead( getANTsRData( "r16" ) )
i2 = antsImageRead( getANTsRData( "r64" ) )
s1 = thresholdImage( i1, "Otsu", 3 )
s2 = thresholdImage( i2, "Otsu", 3 )
rand = randomImageTransformParametersAugmentation( i1,
  list( i1, i2 ), txParamMeans=c(1,0,0,1), txParamSDs=diag(4)*0.01 )

}
\seealso{
\code{\link{randomImageTransformParametersBatchGenerator}}
}
\author{
Avants BB
}
